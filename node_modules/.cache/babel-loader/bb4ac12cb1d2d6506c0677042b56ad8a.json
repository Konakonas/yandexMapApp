{"remainingRequest":"C:\\Users\\Тагир\\Desktop\\project\\tableProject\\yandexMapApp\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\Тагир\\Desktop\\project\\tableProject\\yandexMapApp\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\Тагир\\Desktop\\project\\tableProject\\yandexMapApp\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Тагир\\Desktop\\project\\tableProject\\yandexMapApp\\src\\views\\Home.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\Тагир\\Desktop\\project\\tableProject\\yandexMapApp\\src\\views\\Home.vue","mtime":1604995505949},{"path":"C:\\Users\\Тагир\\Desktop\\project\\tableProject\\yandexMapApp\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Тагир\\Desktop\\project\\tableProject\\yandexMapApp\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\Тагир\\Desktop\\project\\tableProject\\yandexMapApp\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Тагир\\Desktop\\project\\tableProject\\yandexMapApp\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["Home.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div>\n    <yandex-map\n            :zoom=\"zoom\"\n            style=\"width: 100%; max-width: 100%; height: 98vh;\"\n            :coords= \"coords.length ? coords : [55.7521833, 37.613614]\"\n            @click=\"onClick\"\n            @map-was-initialized=\"initMap\"\n    >\n      <ymap-marker\n              :coords=\"coords\"\n              marker-id=\"123\"\n              hint-content=\"some hint\"\n      />\n      <ymap-marker\n              :marker-id=\"1234\"\n              marker-type=\"polygon\"\n              :coords=\"[polygon,[]]\"\n              circle-radius=\"16000\"\n              :marker-fill=\"{color: '#1890ff', opacity: opt}\"\n              :marker-stroke=\"{color: '#1890ff', width: 1}\"\n              @click=\"onClick\"\n      ></ymap-marker>\n    </yandex-map>\n  </div>\n</template>\n\n<script>\nimport { yandexMap, loadYmap, ymapMarker } from 'vue-yandex-maps';\nimport { debounce, sortBy } from 'lodash';\nimport mkadArray from './mkad';\n\nexport default {\n  components: { yandexMap, ymapMarker },\n  data() {\n    return {\n      opt: 0.4,\n      coords: [],\n      address: null,\n      polygon: mkadArray,\n      globalMap: null,\n      route: null,\n      airRoute: null,\n      zoom: 12,\n      points: 5,\n    };\n  },\n  methods: {\n    debounce,\n    async onClick(e) {\n      this.coords = e.get('coords');\n      this.getAdress();\n      console.log(e);\n      const closestDistance = await this.сalcClosestDistance(e);\n      this.setRoute(e, closestDistance);\n      return true;\n    },\n    /* сохранение карты в переменную */\n    initMap(map) {\n      this.globalMap = map;\n    },\n    /* - */\n    async geocoder() {\n      await loadYmap();\n    },\n    /* получение адреса по координатам */\n    async getAdress() {\n      // eslint-disable-next-line no-undef\n      ymaps.geocode(this.coords)\n        .then((res) => {\n          this.address = res.geoObjects.get(0)\n            .getAddressLine();\n        });\n    },\n    /* расчет ближайшего расстояния по воздуху */\n    сalcClosestDistance(e) {\n      const currentPoint = e.get('coords');\n      const object = [];\n      this.polygon.forEach(async (coords) => {\n        const r = 6371; // Радиус земли\n        const dLat = (currentPoint[0].toFixed(6) - coords[0]) * (Math.PI / 180);\n        const dLon = (currentPoint[1].toFixed(6) - coords[1]) * (Math.PI / 180);\n        const a = Math.sin(dLat / 2) * Math.sin(dLat / 2)\n        // eslint-disable-next-line max-len\n                  + Math.cos(coords[0] * (Math.PI / 180)) * Math.cos(currentPoint[0] * (Math.PI / 180))\n                  * Math.sin(dLon / 2) * Math.sin(dLon / 2);\n        const c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n        const distance = r * c;\n        object.push({ distance, coords });\n      });\n      return object;\n    },\n    /* расчет ближайшего расстояния по земле */\n    async calcDistance(e, coords) {\n      // eslint-disable-next-line no-undef\n      const dis = await ymaps.route([e.get('coords'), coords]);\n      return dis.getLength();\n    },\n    setRoute(e, distances) {\n      const selected = sortBy(distances, 'distance');\n      const count = this.points;\n      this.getDistProccess(selected.slice(0, count), e);\n    },\n    async getDistProccess(selected, e) {\n      const promises = [];\n      selected.forEach((point) => {\n        promises.push(this.calcDistance(e, point.coords));\n      });\n      await Promise.all(promises).then((res) => {\n        let min = 0;\n        let minRes = res[0];\n        res.forEach((point, index) => {\n          if (point < minRes) {\n            minRes = point;\n            min = index;\n          }\n        });\n        console.log('Расстояние по воздуху:  ', selected[0]);\n        console.log('Расстояние по дорогам:  ', selected[min]);\n        this.routeCarDistance(e, selected[min]);\n        this.routeAirDistance(e, selected[0]);\n      });\n    },\n    routeCarDistance(e, select) {\n      // eslint-disable-next-line no-undef\n      ymaps.route([e.get('coords'), select.coords]).then((router) => {\n        if (this.route) this.globalMap.geoObjects.remove(this.route);\n        this.route = router.getPaths();\n        this.route.options.set({ strokeWidth: 5, strokeColor: '227f05', opacity: 0.7 });\n        this.globalMap.geoObjects.add(this.route);\n      });\n    },\n    routeAirDistance(e, select) {\n      // eslint-disable-next-line no-undef\n      const myGeoObject = new ymaps.GeoObject({\n        geometry: {\n          type: 'LineString',\n          coordinates: [e.get('coords'), select.coords],\n        },\n      }, {\n        strokeColor: '#000000',\n        strokeWidth: 4,\n        strokeStyle: '1 5',\n      });\n      if (this.airRoute) this.globalMap.geoObjects.remove(this.airRoute);\n      this.airRoute = myGeoObject;\n      this.globalMap.geoObjects.add(this.airRoute);\n    },\n  },\n  async mounted() {\n    await loadYmap();\n  },\n};\n</script>\n\n<style scoped>\n</style>\n"],"sourceRoot":"src/views"}]}