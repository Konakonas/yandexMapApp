{"remainingRequest":"C:\\Users\\Тагир\\Desktop\\project\\tableProject\\yandexMapApp\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\Тагир\\Desktop\\project\\tableProject\\yandexMapApp\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\Тагир\\Desktop\\project\\tableProject\\yandexMapApp\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Тагир\\Desktop\\project\\tableProject\\yandexMapApp\\src\\views\\Home.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\Тагир\\Desktop\\project\\tableProject\\yandexMapApp\\src\\views\\Home.vue","mtime":1605012199817},{"path":"C:\\Users\\Тагир\\Desktop\\project\\tableProject\\yandexMapApp\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Тагир\\Desktop\\project\\tableProject\\yandexMapApp\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\Тагир\\Desktop\\project\\tableProject\\yandexMapApp\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Тагир\\Desktop\\project\\tableProject\\yandexMapApp\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["Home.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div>\n    <yandex-map\n            :zoom=\"zoom\"\n            style=\"width: 100%; max-width: 100%; height: 98vh;\"\n            :coords= \"coords.length ? coords : [55.7521833, 37.613614]\"\n            @click=\"onClick\"\n            @map-was-initialized=\"initMap\"\n    >\n      <ymap-marker\n              :coords=\"coords\"\n              marker-id=\"1\"\n              hint-content=\"some hint\"\n              :mouseenter=\"{color: '#1890ff', opacity: 1}\"\n      />\n      <ymap-marker\n              :marker-id=\"1234\"\n              marker-type=\"polygon\"\n              :coords=\"[polygon,[]]\"\n              circle-radius=\"16000\"\n              :marker-fill=\"{color: '#1890ff', opacity: 0.7}\"\n              :marker-stroke=\"{color: '#1890ff', width: 1}\"\n              @click=\"onClick\"\n      ></ymap-marker>\n    </yandex-map>\n<!--    <a-button type=\"primary\" @click=\"openNotification\">-->\n<!--      Open the notification box-->\n<!--    </a-button>-->\n  </div>\n</template>\n\n<script>\nimport { yandexMap, loadYmap, ymapMarker } from 'vue-yandex-maps';\nimport { debounce, sortBy } from 'lodash';\n// import { notification } from 'ant-design-vue';\nimport mkadArray from './mkad';\n\nexport default {\n  components: { yandexMap, ymapMarker },\n  data() {\n    return {\n      opt: 0.4,\n      coords: [],\n      address: null,\n      polygon: mkadArray,\n      globalMap: null,\n      route: null,\n      airRoute: null,\n      zoom: 12,\n      points: 5,\n      testPoints: {},\n    };\n  },\n  methods: {\n    // notification,\n    debounce,\n    async onClick(e) {\n      this.coords = e.get('coords');\n      // this.openNotification();\n      this.getAdress();\n      // console.log(e);\n      const closestDistance = await this.calcClosestDistance(e);\n      const firstCoords = this.setRoute(e, closestDistance);\n      // const calcCoords =\n      this.getDistProccess(firstCoords, e);\n      console.log('1: ', this.testPoints);\n      this.getInfo();\n      // this.routeCarDistance(e, calcCoords[0].carCoord);\n      // console.log('2: ', calcCoords.airCoord);\n      // this.routeAirDistance(e, calcCoords[0].airCoord);\n      // console.log('3');\n      return true;\n    },\n    getInfo() {\n      console.log(\n        'координаты:  ', this.coords, '\\n',\n        'координаты ближайшей по земле:  ', this.testPoints.carCoord, '\\n',\n        'координаты ближайшей по воздуху:  ', this.testPoints.airCoord, '\\n',\n        'дистанция по земле:   ', this.testPoints.airDistance, '\\n',\n        'дистанция по воздуху:   ', this.testPoints.carDistance, '\\n',\n        'адрес:   ', this.testPoints.address,\n      );\n    },\n    /* сохранение карты в переменную */\n    initMap(map) {\n      this.globalMap = map;\n    },\n    /* загрузка модуля yandex api vue для работы с ymaps */\n    async geocoder() {\n      await loadYmap();\n    },\n    /* получение адреса по координатам */\n    async getAdress() {\n      // eslint-disable-next-line no-undef\n      ymaps.geocode(this.coords)\n        .then((res) => {\n          this.address = res.geoObjects.get(0)\n            .getAddressLine();\n        });\n    },\n    /* расчет ближайшего расстояния по воздуху */\n    calcClosestDistance(e) {\n      const currentPoint = e.get('coords');\n      const object = [];\n      this.polygon.forEach(async (coords) => {\n        const r = 6371; // Радиус земли\n        const dLat = (currentPoint[0].toFixed(6) - coords[0]) * (Math.PI / 180);\n        const dLon = (currentPoint[1].toFixed(6) - coords[1]) * (Math.PI / 180);\n        const a = Math.sin(dLat / 2) * Math.sin(dLat / 2)\n        // eslint-disable-next-line max-len\n                  + Math.cos(coords[0] * (Math.PI / 180)) * Math.cos(currentPoint[0] * (Math.PI / 180))\n                  * Math.sin(dLon / 2) * Math.sin(dLon / 2);\n        const c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n        const distance = r * c;\n        object.push({ distance, coords });\n      });\n      return object;\n    },\n    /* расчет ближайшего расстояния по земле */\n    async calcDistance(e, coords) {\n      // eslint-disable-next-line no-undef\n      const dis = await ymaps.route([e.get('coords'), coords]);\n      return dis.getLength();\n    },\n    /* выбор n(point) ближайших точек */\n    setRoute(e, distances) {\n      const result = sortBy(distances, 'distance').slice(0, this.points);\n      this.testPoints.airDistance = result[0].distance * 1000;\n      return result;\n    },\n    /* выбор 2 ближайших точек: для расчета по воздуху и земле */\n    async getDistProccess(selected, e) {\n      const promises = [];\n      selected.forEach((point) => {\n        promises.push(this.calcDistance(e, point.coords));\n      });\n      const array = [];\n      await Promise.all(promises).then((res) => {\n        console.log(res);\n        let min = 0;\n        let minRes = res[0];\n        res.forEach((point, index) => {\n          if (point < minRes) {\n            minRes = point;\n            min = index;\n          }\n        });\n        // console.log('Расстояние по воздуху:  ', selected[0]);\n        // console.log('Расстояние по дорогам:  ', selected[min]);\n        // this.testPoints = { carCoord: selected[min], airCoord: selected[0] };\n        // console.log({ carCoord: selected[min], airCoord: selected[0] });\n        // array.push({ carCoord: selected[min], airCoord: selected[0] });\n        // return {};\n        this.routeCarDistance(e, selected[min], res[min]);\n        this.routeAirDistance(e, selected[0]);\n      });\n      return array;\n    },\n    /* создание пути на карте для авто */\n    routeCarDistance(e, select, dist) {\n      this.testPoints.carCoord = select;\n      this.testPoints.carDistance = dist;\n      console.log(select);\n      // eslint-disable-next-line no-undef\n      ymaps.route([e.get('coords'), select.coords]).then((router) => {\n        if (this.route) this.globalMap.geoObjects.remove(this.route);\n        this.route = router.getPaths();\n        this.route.options.set({ strokeWidth: 5, strokeColor: '227f05', opacity: 0.7 });\n        this.globalMap.geoObjects.add(this.route);\n      });\n    },\n    /* создание пути на карте по воздуху */\n    routeAirDistance(e, select) {\n      this.testPoints.airCoord = select;\n      console.log(select);\n      // eslint-disable-next-line no-undef\n      const myGeoObject = new ymaps.GeoObject({\n        geometry: {\n          type: 'LineString',\n          coordinates: [e.get('coords'), select.coords],\n        },\n      }, {\n        strokeColor: '#000000',\n        strokeWidth: 4,\n        strokeStyle: '1 5',\n      });\n      if (this.airRoute) this.globalMap.geoObjects.remove(this.airRoute);\n      this.airRoute = myGeoObject;\n      this.globalMap.geoObjects.add(this.airRoute);\n    },\n    // openNotification() {\n    //   const key = `open${Date.now()}`;\n    //   notification.open({\n    //     message: 'Вы верно выбрали адрес? '\n    //             + `${this.address}`,\n    //     btn: (h) => h(\n    //       'a-button',\n    //       {\n    //         props: {\n    //           type: 'primary',\n    //           size: 'small',\n    //         },\n    //         // on: {\n    //         //   click: () => this.$notification.close(key),\n    //         // },\n    //       },\n    //       'Confirm',\n    //     ),\n    //     key,\n    //   });\n    //   console.log('TEEEEEEEEEEEST');\n    // },\n  },\n  async mounted() {\n    await loadYmap();\n  },\n};\n</script>\n\n<style scoped>\n</style>\n"],"sourceRoot":"src/views"}]}