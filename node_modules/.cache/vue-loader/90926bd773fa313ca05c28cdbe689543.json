{"remainingRequest":"C:\\Users\\Тагир\\Desktop\\project\\tableProject\\yandexMapApp\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Тагир\\Desktop\\project\\tableProject\\yandexMapApp\\src\\views\\Home.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\Тагир\\Desktop\\project\\tableProject\\yandexMapApp\\src\\views\\Home.vue","mtime":1605012199817},{"path":"C:\\Users\\Тагир\\Desktop\\project\\tableProject\\yandexMapApp\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Тагир\\Desktop\\project\\tableProject\\yandexMapApp\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\Тагир\\Desktop\\project\\tableProject\\yandexMapApp\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Тагир\\Desktop\\project\\tableProject\\yandexMapApp\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["Home.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgfile":"Home.vue","sourceRoot":"src/views","sourcesContent":["<template>\n  <div>\n    <yandex-map\n            :zoom=\"zoom\"\n            style=\"width: 100%; max-width: 100%; height: 98vh;\"\n            :coords= \"coords.length ? coords : [55.7521833, 37.613614]\"\n            @click=\"onClick\"\n            @map-was-initialized=\"initMap\"\n    >\n      <ymap-marker\n              :coords=\"coords\"\n              marker-id=\"1\"\n              hint-content=\"some hint\"\n              :mouseenter=\"{color: '#1890ff', opacity: 1}\"\n      />\n      <ymap-marker\n              :marker-id=\"1234\"\n              marker-type=\"polygon\"\n              :coords=\"[polygon,[]]\"\n              circle-radius=\"16000\"\n              :marker-fill=\"{color: '#1890ff', opacity: 0.7}\"\n              :marker-stroke=\"{color: '#1890ff', width: 1}\"\n              @click=\"onClick\"\n      ></ymap-marker>\n    </yandex-map>\n<!--    <a-button type=\"primary\" @click=\"openNotification\">-->\n<!--      Open the notification box-->\n<!--    </a-button>-->\n  </div>\n</template>\n\n<script>\nimport { yandexMap, loadYmap, ymapMarker } from 'vue-yandex-maps';\nimport { debounce, sortBy } from 'lodash';\n// import { notification } from 'ant-design-vue';\nimport mkadArray from './mkad';\n\nexport default {\n  components: { yandexMap, ymapMarker },\n  data() {\n    return {\n      opt: 0.4,\n      coords: [],\n      address: null,\n      polygon: mkadArray,\n      globalMap: null,\n      route: null,\n      airRoute: null,\n      zoom: 12,\n      points: 5,\n      testPoints: {},\n    };\n  },\n  methods: {\n    // notification,\n    debounce,\n    async onClick(e) {\n      this.coords = e.get('coords');\n      // this.openNotification();\n      this.getAdress();\n      // console.log(e);\n      const closestDistance = await this.calcClosestDistance(e);\n      const firstCoords = this.setRoute(e, closestDistance);\n      // const calcCoords =\n      this.getDistProccess(firstCoords, e);\n      console.log('1: ', this.testPoints);\n      this.getInfo();\n      // this.routeCarDistance(e, calcCoords[0].carCoord);\n      // console.log('2: ', calcCoords.airCoord);\n      // this.routeAirDistance(e, calcCoords[0].airCoord);\n      // console.log('3');\n      return true;\n    },\n    getInfo() {\n      console.log(\n        'координаты:  ', this.coords, '\\n',\n        'координаты ближайшей по земле:  ', this.testPoints.carCoord, '\\n',\n        'координаты ближайшей по воздуху:  ', this.testPoints.airCoord, '\\n',\n        'дистанция по земле:   ', this.testPoints.airDistance, '\\n',\n        'дистанция по воздуху:   ', this.testPoints.carDistance, '\\n',\n        'адрес:   ', this.testPoints.address,\n      );\n    },\n    /* сохранение карты в переменную */\n    initMap(map) {\n      this.globalMap = map;\n    },\n    /* загрузка модуля yandex api vue для работы с ymaps */\n    async geocoder() {\n      await loadYmap();\n    },\n    /* получение адреса по координатам */\n    async getAdress() {\n      // eslint-disable-next-line no-undef\n      ymaps.geocode(this.coords)\n        .then((res) => {\n          this.address = res.geoObjects.get(0)\n            .getAddressLine();\n        });\n    },\n    /* расчет ближайшего расстояния по воздуху */\n    calcClosestDistance(e) {\n      const currentPoint = e.get('coords');\n      const object = [];\n      this.polygon.forEach(async (coords) => {\n        const r = 6371; // Радиус земли\n        const dLat = (currentPoint[0].toFixed(6) - coords[0]) * (Math.PI / 180);\n        const dLon = (currentPoint[1].toFixed(6) - coords[1]) * (Math.PI / 180);\n        const a = Math.sin(dLat / 2) * Math.sin(dLat / 2)\n        // eslint-disable-next-line max-len\n                  + Math.cos(coords[0] * (Math.PI / 180)) * Math.cos(currentPoint[0] * (Math.PI / 180))\n                  * Math.sin(dLon / 2) * Math.sin(dLon / 2);\n        const c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n        const distance = r * c;\n        object.push({ distance, coords });\n      });\n      return object;\n    },\n    /* расчет ближайшего расстояния по земле */\n    async calcDistance(e, coords) {\n      // eslint-disable-next-line no-undef\n      const dis = await ymaps.route([e.get('coords'), coords]);\n      return dis.getLength();\n    },\n    /* выбор n(point) ближайших точек */\n    setRoute(e, distances) {\n      const result = sortBy(distances, 'distance').slice(0, this.points);\n      this.testPoints.airDistance = result[0].distance * 1000;\n      return result;\n    },\n    /* выбор 2 ближайших точек: для расчета по воздуху и земле */\n    async getDistProccess(selected, e) {\n      const promises = [];\n      selected.forEach((point) => {\n        promises.push(this.calcDistance(e, point.coords));\n      });\n      const array = [];\n      await Promise.all(promises).then((res) => {\n        console.log(res);\n        let min = 0;\n        let minRes = res[0];\n        res.forEach((point, index) => {\n          if (point < minRes) {\n            minRes = point;\n            min = index;\n          }\n        });\n        // console.log('Расстояние по воздуху:  ', selected[0]);\n        // console.log('Расстояние по дорогам:  ', selected[min]);\n        // this.testPoints = { carCoord: selected[min], airCoord: selected[0] };\n        // console.log({ carCoord: selected[min], airCoord: selected[0] });\n        // array.push({ carCoord: selected[min], airCoord: selected[0] });\n        // return {};\n        this.routeCarDistance(e, selected[min], res[min]);\n        this.routeAirDistance(e, selected[0]);\n      });\n      return array;\n    },\n    /* создание пути на карте для авто */\n    routeCarDistance(e, select, dist) {\n      this.testPoints.carCoord = select;\n      this.testPoints.carDistance = dist;\n      console.log(select);\n      // eslint-disable-next-line no-undef\n      ymaps.route([e.get('coords'), select.coords]).then((router) => {\n        if (this.route) this.globalMap.geoObjects.remove(this.route);\n        this.route = router.getPaths();\n        this.route.options.set({ strokeWidth: 5, strokeColor: '227f05', opacity: 0.7 });\n        this.globalMap.geoObjects.add(this.route);\n      });\n    },\n    /* создание пути на карте по воздуху */\n    routeAirDistance(e, select) {\n      this.testPoints.airCoord = select;\n      console.log(select);\n      // eslint-disable-next-line no-undef\n      const myGeoObject = new ymaps.GeoObject({\n        geometry: {\n          type: 'LineString',\n          coordinates: [e.get('coords'), select.coords],\n        },\n      }, {\n        strokeColor: '#000000',\n        strokeWidth: 4,\n        strokeStyle: '1 5',\n      });\n      if (this.airRoute) this.globalMap.geoObjects.remove(this.airRoute);\n      this.airRoute = myGeoObject;\n      this.globalMap.geoObjects.add(this.airRoute);\n    },\n    // openNotification() {\n    //   const key = `open${Date.now()}`;\n    //   notification.open({\n    //     message: 'Вы верно выбрали адрес? '\n    //             + `${this.address}`,\n    //     btn: (h) => h(\n    //       'a-button',\n    //       {\n    //         props: {\n    //           type: 'primary',\n    //           size: 'small',\n    //         },\n    //         // on: {\n    //         //   click: () => this.$notification.close(key),\n    //         // },\n    //       },\n    //       'Confirm',\n    //     ),\n    //     key,\n    //   });\n    //   console.log('TEEEEEEEEEEEST');\n    // },\n  },\n  async mounted() {\n    await loadYmap();\n  },\n};\n</script>\n\n<style scoped>\n</style>\n"]}]}