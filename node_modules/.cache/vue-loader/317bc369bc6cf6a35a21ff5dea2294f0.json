{"remainingRequest":"C:\\Users\\Тагир\\Desktop\\project\\tableProject\\yandexMapApp\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Тагир\\Desktop\\project\\tableProject\\yandexMapApp\\src\\views\\Home.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\Тагир\\Desktop\\project\\tableProject\\yandexMapApp\\src\\views\\Home.vue","mtime":1604940191971},{"path":"C:\\Users\\Тагир\\Desktop\\project\\tableProject\\yandexMapApp\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Тагир\\Desktop\\project\\tableProject\\yandexMapApp\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\Тагир\\Desktop\\project\\tableProject\\yandexMapApp\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Тагир\\Desktop\\project\\tableProject\\yandexMapApp\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCB7IHlhbmRleE1hcCwgbG9hZFltYXAsIHltYXBNYXJrZXIgfSBmcm9tICd2dWUteWFuZGV4LW1hcHMnOwppbXBvcnQgeyBkZWJvdW5jZSwgc29ydEJ5IH0gZnJvbSAnbG9kYXNoJzsKaW1wb3J0IG1rYWRBcnJheSBmcm9tICcuL21rYWQnOwoKZXhwb3J0IGRlZmF1bHQgewogIGNvbXBvbmVudHM6IHsgeWFuZGV4TWFwLCB5bWFwTWFya2VyIH0sCiAgZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIG9wdDogMC40LAogICAgICBjb29yZHM6IFtdLAogICAgICBwb2x5Z29uOiBta2FkQXJyYXkubWFwKChpKSA9PiBpLnJldmVyc2UoKSksCiAgICAgIGdsb2JhbE1hcDogbnVsbCwKICAgICAgcm91dGU6IG51bGwsCiAgICAgIGFpclJvdXRlOiBudWxsLAogICAgfTsKICB9LAogIG1ldGhvZHM6IHsKICAgIGRlYm91bmNlLAogICAgYXN5bmMgb25DbGljayhlKSB7CiAgICAgIHRoaXMuY29vcmRzID0gZS5nZXQoJ2Nvb3JkcycpOwogICAgICBjb25zdCBjbG9zZXN0RGlzdGFuY2UgPSBhd2FpdCB0aGlzLmdldENsb3Nlc3REaXN0YW5jZShlKTsKICAgICAgdGhpcy5zZXRSb3V0ZShlLCBjbG9zZXN0RGlzdGFuY2UpOwogICAgICByZXR1cm4gdHJ1ZTsKICAgIH0sCiAgICAvKiAtICovCiAgICBpbml0TWFwKG1hcCkgewogICAgICB0aGlzLmdsb2JhbE1hcCA9IG1hcDsKICAgIH0sCiAgICAvKiAtICovCiAgICBhc3luYyBnZW9jb2RlcigpIHsKICAgICAgYXdhaXQgbG9hZFltYXAoKTsKICAgIH0sCiAgICAvKiAtICovCiAgICBnZXRDbG9zZXN0RGlzdGFuY2UoZSkgewogICAgICBjb25zdCBjdXJyZW50UG9pbnQgPSBlLmdldCgnY29vcmRzJyk7CiAgICAgIGNvbnN0IG9iamVjdCA9IFtdOwogICAgICB0aGlzLnBvbHlnb24uZm9yRWFjaChhc3luYyAoY29vcmRzKSA9PiB7CiAgICAgICAgY29uc3QgciA9IDYzNzE7IC8vINCg0LDQtNC40YPRgSDQt9C10LzQu9C4CiAgICAgICAgY29uc3QgZExhdCA9IChjdXJyZW50UG9pbnRbMF0udG9GaXhlZCg2KSAtIGNvb3Jkc1swXSkgKiAoTWF0aC5QSSAvIDE4MCk7CiAgICAgICAgY29uc3QgZExvbiA9IChjdXJyZW50UG9pbnRbMV0udG9GaXhlZCg2KSAtIGNvb3Jkc1sxXSkgKiAoTWF0aC5QSSAvIDE4MCk7CiAgICAgICAgY29uc3QgYSA9IE1hdGguc2luKGRMYXQgLyAyKSAqIE1hdGguc2luKGRMYXQgLyAyKQogICAgICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBtYXgtbGVuCiAgICAgICAgICAgICAgICAgICsgTWF0aC5jb3MoY29vcmRzWzBdICogKE1hdGguUEkgLyAxODApKSAqIE1hdGguY29zKGN1cnJlbnRQb2ludFswXSAqIChNYXRoLlBJIC8gMTgwKSkKICAgICAgICAgICAgICAgICAgKiBNYXRoLnNpbihkTG9uIC8gMikgKiBNYXRoLnNpbihkTG9uIC8gMik7CiAgICAgICAgY29uc3QgYyA9IDIgKiBNYXRoLmF0YW4yKE1hdGguc3FydChhKSwgTWF0aC5zcXJ0KDEgLSBhKSk7CiAgICAgICAgY29uc3QgZGlzdGFuY2UgPSByICogYzsKICAgICAgICBvYmplY3QucHVzaCh7IGRpc3RhbmNlLCBjb29yZHMgfSk7CiAgICAgIH0pOwogICAgICByZXR1cm4gb2JqZWN0OwogICAgfSwKICAgIGFzeW5jIGdldERpc3RhbmNlKGUsIGNvb3JkcykgewogICAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbm8tdW5kZWYKICAgICAgY29uc3QgZGlzID0gYXdhaXQgeW1hcHMucm91dGUoW2UuZ2V0KCdjb29yZHMnKSwgY29vcmRzXSk7CiAgICAgIHJldHVybiBkaXMuZ2V0TGVuZ3RoKCk7CiAgICB9LAogICAgc2V0Um91dGUoZSwgZGlzdGFuY2VzKSB7CiAgICAgIGNvbnN0IHNlbGVjdGVkID0gc29ydEJ5KGRpc3RhbmNlcywgJ2Rpc3RhbmNlJyk7CiAgICAgIGNvbnN0IGNvdW50ID0gNTsKICAgICAgdGhpcy5nZXREaXN0UHJvY2Nlc3Moc2VsZWN0ZWQuc2xpY2UoMCwgY291bnQpLCBlKTsKICAgIH0sCiAgICBhc3luYyBnZXREaXN0UHJvY2Nlc3Moc2VsZWN0ZWQsIGUpIHsKICAgICAgY29uc3QgcHJvbWlzZXMgPSBbXTsKICAgICAgLy8gY29uc3Qgcm91dGVEaXN0ID0gW107CiAgICAgIHNlbGVjdGVkLmZvckVhY2goKHBvaW50KSA9PiB7CiAgICAgICAgcHJvbWlzZXMucHVzaCh0aGlzLmdldERpc3RhbmNlKGUsIHBvaW50LmNvb3JkcykpOwogICAgICAgIC8vIHByb21pc2VzW2luZGV4XS5jb29yZHMgPSBwb2ludC5jb29yZHM7CiAgICAgICAgLy8gcm91dGVEaXN0LnB1c2goeyBjb29yZHM6IHBvaW50LmNvb3JkcyB9KTsKICAgICAgfSk7CiAgICAgIGF3YWl0IFByb21pc2UuYWxsKHByb21pc2VzKS50aGVuKChyZXMpID0+IHsKICAgICAgICBsZXQgbWluID0gMDsKICAgICAgICBsZXQgbWluUmVzID0gcmVzWzBdOwogICAgICAgIHJlcy5mb3JFYWNoKChwb2ludCwgaW5kZXgpID0+IHsKICAgICAgICAgIGlmIChwb2ludCA8IG1pblJlcykgewogICAgICAgICAgICBtaW5SZXMgPSBwb2ludDsKICAgICAgICAgICAgbWluID0gaW5kZXg7CiAgICAgICAgICB9CiAgICAgICAgfSk7CiAgICAgICAgdGhpcy5yb3V0ZUNhckRpc3RhbmNlKGUsIHNlbGVjdGVkW21pbl0pOwogICAgICAgIHRoaXMucm91dGVBaXJEaXN0YW5jZShlLCBzZWxlY3RlZFswXSk7CiAgICAgIH0pOwogICAgfSwKICAgIHJvdXRlQ2FyRGlzdGFuY2UoZSwgc2VsZWN0KSB7CiAgICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBuby11bmRlZgogICAgICB5bWFwcy5yb3V0ZShbZS5nZXQoJ2Nvb3JkcycpLCBzZWxlY3QuY29vcmRzXSkudGhlbigocm91dGVyKSA9PiB7CiAgICAgICAgaWYgKHRoaXMucm91dGUpIHRoaXMuZ2xvYmFsTWFwLmdlb09iamVjdHMucmVtb3ZlKHRoaXMucm91dGUpOwogICAgICAgIHRoaXMucm91dGUgPSByb3V0ZXIuZ2V0UGF0aHMoKTsKICAgICAgICB0aGlzLnJvdXRlLm9wdGlvbnMuc2V0KHsgc3Ryb2tlV2lkdGg6IDUsIHN0cm9rZUNvbG9yOiAnMjI3ZjA1Jywgb3BhY2l0eTogMC43IH0pOwogICAgICAgIHRoaXMuZ2xvYmFsTWFwLmdlb09iamVjdHMuYWRkKHRoaXMucm91dGUpOwogICAgICB9KTsKICAgIH0sCiAgICByb3V0ZUFpckRpc3RhbmNlKGUsIHNlbGVjdCkgewogICAgLy8gcm91dGVBaXJEaXN0YW5jZSgpIHsKICAgICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG5vLXVuZGVmCiAgICAgIGNvbnN0IG15R2VvT2JqZWN0ID0gbmV3IHltYXBzLkdlb09iamVjdCh7CiAgICAgICAgZ2VvbWV0cnk6IHsKICAgICAgICAgIHR5cGU6ICdMaW5lU3RyaW5nJywKICAgICAgICAgIGNvb3JkaW5hdGVzOiBbZS5nZXQoJ2Nvb3JkcycpLCBzZWxlY3QuY29vcmRzXSwKICAgICAgICB9LAogICAgICB9LCB7CiAgICAgICAgc3Ryb2tlQ29sb3I6ICcjMDAwMDAwJywKICAgICAgICBzdHJva2VXaWR0aDogNCwKICAgICAgICBzdHJva2VTdHlsZTogJzEgNScsCiAgICAgIH0pOwogICAgICBpZiAodGhpcy5haXJSb3V0ZSkgdGhpcy5nbG9iYWxNYXAuZ2VvT2JqZWN0cy5yZW1vdmUodGhpcy5haXJSb3V0ZSk7CiAgICAgIHRoaXMuYWlyUm91dGUgPSBteUdlb09iamVjdDsKICAgICAgLy8gdGhpcy5yb3V0ZS5vcHRpb25zLnNldCh7IHN0cm9rZVdpZHRoOiA1LCBzdHJva2VDb2xvcjogJzIyN2YwNScsIG9wYWNpdHk6IDAuNyB9KTsKICAgICAgdGhpcy5nbG9iYWxNYXAuZ2VvT2JqZWN0cy5hZGQodGhpcy5haXJSb3V0ZSk7CiAgICB9LAogIH0sCiAgYXN5bmMgbW91bnRlZCgpIHsKICAgIGF3YWl0IGxvYWRZbWFwKCk7CiAgfSwKfTsK"},{"version":3,"sources":["Home.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA6BA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Home.vue","sourceRoot":"src/views","sourcesContent":["<template>\n  <div>\n    <yandex-map\n            zoom=\"12\"\n            style=\"width: 100%; max-width: 100%; height: 98vh;\"\n            :coords= \"coords.length ? coords : [55.7521833, 37.613614]\"\n            @click=\"onClick\"\n            @map-was-initialized=\"initMap\"\n    >\n      <ymap-marker\n              :coords=\"coords\"\n              marker-id=\"123\"\n              hint-content=\"some hint\"\n      />\n      <ymap-marker\n              :marker-id=\"1234\"\n              marker-type=\"polygon\"\n              :coords=\"[polygon,[]]\"\n              circle-radius=\"16000\"\n              :marker-fill=\"{color: '#1890ff', opacity: opt}\"\n              :marker-stroke=\"{color: '#1890ff', width: 1}\"\n              :balloon=\"{header: 'header', body: 'body', footer: 'footer'}\"\n              @click=\"onClick\"\n      ></ymap-marker>\n    </yandex-map>\n  </div>\n</template>\n\n<script>\nimport { yandexMap, loadYmap, ymapMarker } from 'vue-yandex-maps';\nimport { debounce, sortBy } from 'lodash';\nimport mkadArray from './mkad';\n\nexport default {\n  components: { yandexMap, ymapMarker },\n  data() {\n    return {\n      opt: 0.4,\n      coords: [],\n      polygon: mkadArray.map((i) => i.reverse()),\n      globalMap: null,\n      route: null,\n      airRoute: null,\n    };\n  },\n  methods: {\n    debounce,\n    async onClick(e) {\n      this.coords = e.get('coords');\n      const closestDistance = await this.getClosestDistance(e);\n      this.setRoute(e, closestDistance);\n      return true;\n    },\n    /* - */\n    initMap(map) {\n      this.globalMap = map;\n    },\n    /* - */\n    async geocoder() {\n      await loadYmap();\n    },\n    /* - */\n    getClosestDistance(e) {\n      const currentPoint = e.get('coords');\n      const object = [];\n      this.polygon.forEach(async (coords) => {\n        const r = 6371; // Радиус земли\n        const dLat = (currentPoint[0].toFixed(6) - coords[0]) * (Math.PI / 180);\n        const dLon = (currentPoint[1].toFixed(6) - coords[1]) * (Math.PI / 180);\n        const a = Math.sin(dLat / 2) * Math.sin(dLat / 2)\n        // eslint-disable-next-line max-len\n                  + Math.cos(coords[0] * (Math.PI / 180)) * Math.cos(currentPoint[0] * (Math.PI / 180))\n                  * Math.sin(dLon / 2) * Math.sin(dLon / 2);\n        const c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n        const distance = r * c;\n        object.push({ distance, coords });\n      });\n      return object;\n    },\n    async getDistance(e, coords) {\n      // eslint-disable-next-line no-undef\n      const dis = await ymaps.route([e.get('coords'), coords]);\n      return dis.getLength();\n    },\n    setRoute(e, distances) {\n      const selected = sortBy(distances, 'distance');\n      const count = 5;\n      this.getDistProccess(selected.slice(0, count), e);\n    },\n    async getDistProccess(selected, e) {\n      const promises = [];\n      // const routeDist = [];\n      selected.forEach((point) => {\n        promises.push(this.getDistance(e, point.coords));\n        // promises[index].coords = point.coords;\n        // routeDist.push({ coords: point.coords });\n      });\n      await Promise.all(promises).then((res) => {\n        let min = 0;\n        let minRes = res[0];\n        res.forEach((point, index) => {\n          if (point < minRes) {\n            minRes = point;\n            min = index;\n          }\n        });\n        this.routeCarDistance(e, selected[min]);\n        this.routeAirDistance(e, selected[0]);\n      });\n    },\n    routeCarDistance(e, select) {\n      // eslint-disable-next-line no-undef\n      ymaps.route([e.get('coords'), select.coords]).then((router) => {\n        if (this.route) this.globalMap.geoObjects.remove(this.route);\n        this.route = router.getPaths();\n        this.route.options.set({ strokeWidth: 5, strokeColor: '227f05', opacity: 0.7 });\n        this.globalMap.geoObjects.add(this.route);\n      });\n    },\n    routeAirDistance(e, select) {\n    // routeAirDistance() {\n      // eslint-disable-next-line no-undef\n      const myGeoObject = new ymaps.GeoObject({\n        geometry: {\n          type: 'LineString',\n          coordinates: [e.get('coords'), select.coords],\n        },\n      }, {\n        strokeColor: '#000000',\n        strokeWidth: 4,\n        strokeStyle: '1 5',\n      });\n      if (this.airRoute) this.globalMap.geoObjects.remove(this.airRoute);\n      this.airRoute = myGeoObject;\n      // this.route.options.set({ strokeWidth: 5, strokeColor: '227f05', opacity: 0.7 });\n      this.globalMap.geoObjects.add(this.airRoute);\n    },\n  },\n  async mounted() {\n    await loadYmap();\n  },\n};\n</script>\n\n<style scoped>\n</style>\n"]}]}